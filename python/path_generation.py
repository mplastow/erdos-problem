# Generated by ChatGPT on May 14, 2025

import math
from sympy import isprime

def is_visible(u, v):
    return math.gcd(u, v) == 1

def is_forbidden(u, v):
    return isprime(u) and isprime(v)

def next_step(u, v):
    # Try (u+1, v)
    if is_visible(u + 1, v) and not is_forbidden(u + 1, v):
        return (u + 1, v)
    # Try (u, v+1)
    if is_visible(u, v + 1) and not is_forbidden(u, v + 1):
        return (u, v + 1)
    # If neither is valid, try further neighbors (slower fallback)
    for k in range(2, 10):  # look further ahead
        if is_visible(u + k, v) and not is_forbidden(u + k, v):
            return (u + k, v)
        if is_visible(u, v + k) and not is_forbidden(u, v + k):
            return (u, v + k)
    return None  # no move found (shouldn't happen often)

def generate_visible_path(n_steps=5000, start=(1, 2)):
    path = [start]
    u, v = start
    for _ in range(n_steps - 1):
        next_p = next_step(u, v)
        if not next_p:
            print("No valid move found at:", (u, v))
            break
        path.append(next_p)
        u, v = next_p
    return path

# Example usage
if __name__ == "__main__":
    path = generate_visible_path(10000) # Number of points to generate
    for point in path:
        print(point)